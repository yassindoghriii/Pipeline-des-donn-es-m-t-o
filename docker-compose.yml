services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeperr
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-net

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - kafka-net
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/kafka/9092"]
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s

  weather_producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    container_name: weather_producer
    environment:
      - KAFKA_BROKER=kafka:9092
      - WEATHER_API_KEY=528f728527f79551dd8746c86fd00b6c
    depends_on:
      - kafka
    networks:
      - kafka-net

  weather_consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    container_name: weather_consumer
    environment:
      - KAFKA_BROKER=kafka:9092
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - kafka-net
    entrypoint: ["sh", "-c", "sleep 30 && python weather_consumer.py"]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - kafka-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge

